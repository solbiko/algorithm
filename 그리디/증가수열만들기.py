"""
1부터 N까지의 모든 자연수로 구성된 길이 N의 수열이 주어집니다.
이 수열의 왼쪽 맨 끝 숫자 또는 오른쪽 맨 끝 숫자 중 하나를 가져와 나열하여 가장 긴 증가수열 을 만듭니다.
이때 수열에서 가져온 숫자(왼쪽 맨 끝 또는 오른쪽 맨 끝)는 그 수열에서 제거됩니다.
예를 들어 2 4 5 1 3 이 주어지면 만들 수 있는 가장 긴 증가수열의 길이는 4입니다.
맨 처음 왼쪽 끝에서 2를 가져오고, 그 다음 오른쪽 끝에서 3을 가져오고, 왼쪽 끝에서 4, 왼쪽끝에서5를가져와 2345증가수열을 만들 수 있습니다.

첫째 줄에 자연수 N(3<=N<=100)이 주어집니다.
두 번째 줄에 N개로 구성된 수열이 주어집니다.
5
2 4 5 1 3

첫째 줄에 최대 증가수열의 길이를 출력합니다.
두 번째 줄에 가져간 순서대로 왼쪽 끝에서 가져갔으면 ‘L', 오른쪽 끝에서 가져갔으면 ’R'를 써 간 문자열을 출력합니다.
(단 마지막에 남은 값은 왼쪽 끝으로 생각합니다.)
4
LRLL
"""
n=int(input())
a=list(map(int,input().split()))

l=0
r=n-1
last=0 # 마지막 숫자
res="" # 증가수열방향문자열

while l<r:
    tmp = []

    if a[l]>last:
        tmp.append((a[l], 'L'))
    if a[r]>last:
        tmp.append((a[r], 'R'))
    tmp.sort()

    if len(tmp)==0:
        break
    else:
        last=tmp[0][0]
        res=res+tmp[0][1]
        if tmp[0][1]=='L':
            l+=1
        else:
            r-=1
    print(tmp)

print(len(res))
print(res)